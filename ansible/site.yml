---
- hosts: localhost
  connection: local
  gather_facts: false

  vars:
    droplets_count: 6

  tasks:
    - name: Add SSH key to DO account
      digital_ocean:
        state: present
        command: ssh
        name: mimic
        ssh_pub_key: "{{ lookup('file', lookup('env', 'SSH_PUB_KEY') | default ('~/.ssh/id_rsa.pub')) }}"
      register: ssh_response
      tags: provision

    - name: Create Droplets
      digital_ocean:
        state: present
        command: droplet
        name: node{{ item }}
        size_id: 512mb
        region_id: nyc3
        private_networking: yes
        image_id: ubuntu-16-04-x64
        unique_name: yes
        ssh_key_ids: "{{ ssh_response.ssh_key.id }}"
        user_data: |
          #!/bin/bash
          DEBIAN_FRONTEND=noninteractive apt-get -q -y install python-minimal
      with_sequence: count={{ droplets_count }}
      register: do
      async: 600
      poll: 0
      tags: provision

    - name: Wait for Droplet creation to complete
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: do_jobs
      until: do_jobs.finished
      retries: 300
      with_items: "{{ do.results }}"
      tags: provision

    - meta: refresh_inventory
      tags: provision

    - name: Clean up async job cache
      async_status:
        jid: "{{ item.ansible_job_id }}"
        mode: cleanup
      with_items: "{{ do.results }}"
      tags: provision

- hosts: all
  gather_facts: false

  vars:
    client_count: 6

  tasks:
    - name: Group client node(s)
      group_by: key=client
      when: ansible_play_hosts.index(inventory_hostname) < client_count | int
      tags: provision

    - name: Group server node(s)
      group_by: key=server
      tags: provision

- hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    - name: Tag client nodes
      digital_ocean_tag:
        name: client
        state: present
        resource_id: "{{ hostvars[item].do_id }}"
      with_items: "{{ groups.client }}"
      tags: tag

    - name: Tag server nodes
      digital_ocean_tag:
        name: server
        state: present
        resource_id: "{{ hostvars[item].do_id }}"
      with_items: "{{ groups.server }}"
      tags: tag

- hosts: all
  gather_facts: false

  tasks:
    - name: Wait for port 22 to become available
      wait_for:
        port: 22
        host: "{{ inventory_hostname }}"
      delegate_to: localhost
      tags: provision

- hosts: all
  gather_facts: true

  roles:
    - base
