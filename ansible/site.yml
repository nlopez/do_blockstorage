---
- hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    - name: Add SSH key to DO account
      digital_ocean:
        state: present
        command: ssh
        name: mimic
        ssh_pub_key: "{{ lookup('file', '~/.ssh/mimic.pub') }}"
      register: ssh_response

    - name: Create Droplets
      digital_ocean:
        state: present
        command: droplet
        name: node{{ item }}
        size_id: 512mb
        region_id: nyc3
        private_networking: yes
        image_id: ubuntu-16-04-x64
        unique_name: yes
        ssh_key_ids: "{{ ssh_response.ssh_key.id }}"
        user_data: |
          #!/bin/bash
          DEBIAN_FRONTEND=noninteractive apt-get -q -y install python-minimal
      with_sequence: count=6
      register: do
      async: 600
      poll: 0

    - name: Wait for Droplet creation to complete
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: do_jobs
      until: do_jobs.finished
      retries: 300
      with_items: "{{ do.results }}"

    - debug:
        var: do.results

    - name: Add Droplets to inventory
      add_host:
        name: "{{ (lookup('file', item.results_file) | from_json).droplet.ip_address }}"
        groups: do
      when: (lookup('file', item.results_file) | from_json).droplet is defined
      with_items: "{{ do.results }}"

    - name: Clean up async job cache
      async_status:
        jid: "{{ item.ansible_job_id }}"
        mode: cleanup
      with_items: "{{ do.results }}"

- hosts: do
  remote_user: root
  gather_facts: false

  tasks:
    - name: Wait for port 22 to become available
      wait_for:
        port: 22
        host: "{{ inventory_hostname }}"
      delegate_to: localhost

    # - name: Wait long enough for cloud-init to install python2
    #   pause:
    #     seconds: 20
    #   delegate_to: localhost

    - name: Say hello
      shell: >-
        echo "Hello from {{ inventory_hostname }}"
      register: hello

    - debug:
        msg: "{{ hello.stdout_lines }}"
